name: Test and tag main commit

on: 
  push:
    branches:
      - main

jobs:
  ensure-version-updated:
    runs-on: ubuntu-latest

    steps:
      - name: Install required libraries
        run: |
          sudo apt install -y jq 

      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check out previous version
        run: |
          git checkout HEAD^

      - name: Extract version from package.json of compare branch version
        id: get-compare-version
        run: |
          cat package.json | jq -r '.version' > compare_version.txt
          echo "::set-output name=version::$(cat compare_version.txt)"

      - uses: actions/checkout@v3

      - name: Extract version from package.json of base branch version
        id: get-base-version
        run: |
          cat package.json | jq -r '.version' > base_version.txt
          echo "::set-output name=version::$(cat base_version.txt)"

      - name: Compare versions
        run: |
          BASE_VERSION=${{ steps.get-base-version.outputs.version }}
          COMPARE_VERSION=${{ steps.get-compare-version.outputs.version }}
          echo $BASE_VERSION
          echo $COMPARE_VERSION
          diff <(echo ${COMPARE_VERSION}) <(echo ${BASE_VERSION}) > result.txt || :
          DIFF="$(cat result.txt)"
          if [ "$DIFF" == "" ]; then
            echo "version number is not updated: ${BASE_VERSION}"
            exit 1
          else
            echo "version number is updated from ${BASE_VERSION} to ${COMPARE_VERSION}"
            exit 0
          fi

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: |
          npm run test

  check-license:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Check license of dependant libraries
        run: |
          npm run check-license

  package:
    runs-on: ${{ matrix.os }}
    needs: [ensure-version-updated, test, check-license]

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          build_script_name: build:prod

          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

  tag:
    runs-on: ubuntu-latest
    needs: [ ensure-version-updated, test, check-license, package ]


    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_FOR_ACTIONS }}

      - name: Extract version from package.json
        id: get-version
        run: |
          cat package.json | jq -r '.version' > base_version.txt
          echo "::set-output name=version::$(cat base_version.txt)"

      - name: Push tag
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_FOR_ACTIONS }}
          NEW_VERSION: ${{ steps.get-version.outputs.version }}
        run: |
          git tag v$NEW_VERSION
          git push origin v$NEW_VERSION
